{"version":3,"sources":["components/layout/home/home.module.sass","../node_modules/@ion-phaser/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","game/types.ts","features/todo/todo.slice.ts","reducers/rootReducer.ts","components/layout/app/app.component.tsx","game/scenes/demo.ts","game/base-classes/SceneObject.ts","game/base-classes/BaseActor.ts","game/util/directions.ts","game/base-classes/StaticObject.ts","game/actors/duck.ts","game/actors/hunter.ts","game/static/background.ts","game/static/text.ts","game/static/ammo.ts","game/static/score.ts","game/scenes/level.ts","game/scenes/tutorial.ts","components/layout/game/game.component.tsx","hooks/config.hook.ts","assets/duckhunt.png","components/layout/home/home.component.tsx","reportWebVitals.ts","index.tsx","reducers/index.ts"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Direction","ZIndex","DuckAnimation","todoSlice","createSlice","name","initialState","reducers","addTodo","reducer","state","action","payload","text","push","prepare","removeTodo","idx","findIndex","_id","splice","actions","rootReducer","combineReducers","todos","App","console","log","basename","process","path","component","Game","exact","Home","Phaser","Scene","SceneObject","width","height","_instance","sounds","soundList","this","scene","forEach","sound","load","audio","result","add","config","center","x","y","ESide","BaseActor","movement","speed","velocity","direction","NONE","onFinish","setMovement","setAnimation","right","left","top","bottom","setVelocity","RIGHT","LEFT","UP","DOWN","DOWN_LEFT","DOWN_RIGHT","UP_LEFT","UP_RIGHT","StaticObject","directions","OPPOSITE","FOLLOWING","getRandom","arr","Math","Between","length","getRandomDirection","dir","section","Array","isArray","Duck","animation","isKilled","counter","afterBorderCollision","beforeSwitchingDirection","quack","cb","onKill","setSwitchTimer","spritesheet","frameWidth","frameHeight","preloadSound","physics","sprite","setScale","setCollideWorldBounds","createSound","key","frames","anims","generateFrameNumbers","frameRate","repeat","KILLED","create","prepareMove","shouldQuack","shouldSwitchDirection","checkOnBounds","play","duck_quack","newDirection","dead_duck_falls","setAngle","setFlip","isOutOfBorder","Hunter","ammo","cursors","keyboard","onOverlap","duck","space","isDown","isShooting","kill","image","setDepth","CROSSHAIR","input","createCursorKeys","R","addKey","Input","Keyboard","KeyCodes","tryToShoot","reload","up","down","stopMovement","Background","src","BACKGROUND","Text","str","fontSize","color","LABELS","setText","setVisible","Ammo","bullets","caption","magazine","_isShooting","isEmpty","gun_is_empty","shotgun","updateText","setTimeout","isFull","gun_reload","Score","increase","value","decrease","preload","Level","isGameOver","bg","actors","hunter","score","actor","overlap","instance","undefined","some","update","Section","styled","diff","useState","merge","type","AUTO","phaserConfig","setConfig","useCallback","prev","useConfig","game","className","Img","img","H1","h1","styles","home","duckhunt","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","store","configureStore","document","getElementById"],"mappings":"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","file":"static/js/main.d55ed4bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__3uCto\"};","var map = {\n\t\"./ion-phaser.entry.js\": [\n\t\t70,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","export type SpriteWithDynamicBody = Maybe<Phaser.Types.Physics.Arcade.SpriteWithDynamicBody>\nexport type CursorKeys = Maybe<Phaser.Types.Input.Keyboard.CursorKeys>\nexport type Sprite = Maybe<\n\tPhaser.GameObjects.Sprite & Phaser.Physics.Arcade.Sprite & Phaser.Types.Physics.Arcade.SpriteWithDynamicBody\n>\nexport type StaticGroup = Maybe<Phaser.Physics.Arcade.StaticGroup>\nexport type Group = Maybe<Phaser.Physics.Arcade.Group>\nexport type UnknownFn = () => void\nexport type Sound = Phaser.Sound.BaseSound\nexport type Text = Maybe<Phaser.GameObjects.Text>\n\nexport enum Direction {\n\tRIGHT,\n\tLEFT,\n\tUP,\n\tDOWN,\n\tUP_RIGHT,\n\tUP_LEFT,\n\tDOWN_RIGHT,\n\tDOWN_LEFT,\n\tNONE,\n}\n\nexport enum ZIndex {\n\tENEMY,\n\tBACKGROUND,\n\tSTATIC,\n\tLABELS,\n\tCROSSHAIR,\n}\n\nexport enum DuckAnimation {\n\tRIGHT = 'RIGHT',\n\tUP = 'UP',\n\tUP_RIGHT = 'UP_RIGHT',\n\tKILLED = 'KILLED',\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ntype Todo = {\n\ttext: string\n\tid: number\n}\ntype TodosState = Todo[]\n\nlet id = 0\nconst initialState: TodosState = []\n\nconst todoSlice = createSlice({\n\tname: 'todos',\n\tinitialState,\n\treducers: {\n\t\taddTodo: {\n\t\t\treducer: (state, action: PayloadAction<Todo>) => {\n\t\t\t\tconst { text, id } = action.payload\n\t\t\t\tstate.push({ text, id })\n\t\t\t},\n\t\t\tprepare: (text) => ({ payload: { text, id: id++ } }),\n\t\t},\n\t\tremoveTodo: (state, action: PayloadAction<number>) => {\n\t\t\tconst id = action.payload\n\t\t\tconst idx = state.findIndex(({ id: _id }) => id === _id)\n\t\t\tstate.splice(idx, 1)\n\t\t},\n\t},\n})\n\nexport const { addTodo, removeTodo } = todoSlice.actions\nexport default todoSlice.reducer\n","import { combineReducers } from 'redux'\nimport todos from 'features/todo/todo.slice'\n\nexport const rootReducer = combineReducers({\n\ttodos,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Home, Game } from 'components/layout'\n\nexport const App = () => {\n\tconsole.log('feature/gh-pages')\n\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/game\" component={Game} exact />\n\t\t\t\t<Route path=\"/home\" component={Home} />\n\t\t\t\t<Route path=\"/scores\">Scores</Route>\n\t\t\t\t<Route path=\"/about\">About</Route>\n\t\t\t\t<Route path=\"/\" component={Game} />\n\t\t\t</Switch>\n\t\t</Router>\n\t)\n}\n","import Phaser from 'phaser'\n\nexport class Demo extends Phaser.Scene {\n\tconstructor() {\n\t\tsuper('Demo')\n\t}\n\n\tpreload() {\n\t\tthis.load.image('logo', 'game-assets/phaser3-logo.png')\n\t\tthis.load.image('libs', 'game-assets/libs.png')\n\t\tthis.load.glsl('bundle', 'game-assets/plasma-bundle.glsl.js')\n\t\tthis.load.glsl('stars', 'game-assets/starfields.glsl.js')\n\t}\n\n\tcreate() {\n\t\tthis.add.shader('RGB Shift Field', 0, 0, 800, 600).setOrigin(0)\n\t\tthis.add.shader('Plasma', 0, 412, 800, 172).setOrigin(0)\n\t\tthis.add.image(400, 300, 'libs')\n\n\t\tconst logo = this.add.image(400, 70, 'logo')\n\n\t\tthis.tweens.add({\n\t\t\ttargets: logo,\n\t\t\ty: 350,\n\t\t\tduration: 1500,\n\t\t\tease: 'Sine.inOut',\n\t\t\tyoyo: true,\n\t\t\trepeat: -1,\n\t\t})\n\t}\n}\n","import Phaser from 'phaser'\nimport { Sprite } from 'game/types'\nimport { ISound } from 'game/interfaces'\nimport config from 'config.json'\nexport abstract class SceneObject {\n\tabstract preload(): void\n\tabstract create(): void\n\n\tstatic scene = {\n\t\twidth: config.width,\n\t\theight: config.height,\n\t\tcenter: {\n\t\t\tx: config.width / 2,\n\t\t\ty: config.height / 2,\n\t\t},\n\t}\n\n\tprotected width = 0\n\tprotected height = 0\n\tprotected _instance: Sprite\n\tprotected sounds: ISound = {}\n\tprotected soundList: string[] = []\n\n\tget instance() {\n\t\treturn this._instance\n\t}\n\n\tupdate() {}\n\n\tprotected preloadSound(soundList: string[], scene: Phaser.Scene) {\n\t\tsoundList.forEach((sound) =>\n\t\t\tscene.load.audio(sound, [`game-assets/audio/${sound}.ogg`, `game-assets/audio/${sound}.mp3`])\n\t\t)\n\t}\n\tprotected createSound(soundList: string[], scene: Phaser.Scene) {\n\t\tconst result: ISound = {}\n\t\tsoundList.forEach((sound) => (result[sound] = scene.sound.add(sound)))\n\t\treturn result\n\t}\n}\n","import { IAnimated } from 'game/interfaces'\nimport { Direction, UnknownFn } from 'game/types'\nimport { SceneObject } from './SceneObject'\n\nexport abstract class BaseActor extends SceneObject {\n\t// unfortunately I cannot implement protected 'instance',\n\t// because it should be inited in Phaser's create() method,\n\t// which will run ONLY AFTER EcmaScript-constructor\n\t// protected instance: Maybe<Phaser.GameObjects.Sprite>\n\tprotected movement = {\n\t\tspeed: 0,\n\t\tvelocity: { x: 0, y: 0 },\n\t\tdirection: Direction.NONE,\n\t}\n\n\tprotected onFinish: UnknownFn = () => {}\n\n\tprotected prepareMove(direction: Direction, onFinish: UnknownFn = () => {}) {\n\t\tthis.setMovement(direction, onFinish)\n\t\t;((this as unknown) as IAnimated)?.setAnimation(direction)\n\t}\n\n\tprotected isOutOfBorder() {\n\t\tif (!this._instance) return null\n\n\t\tconst right = SceneObject.scene.width - this._instance.x - this.width < 0\n\t\tconst left = this._instance.x - this.width < 0\n\t\tconst top = this._instance.y - this.height < 0\n\t\tconst bottom = SceneObject.scene.height - this._instance.y - this.height < 0\n\n\t\treturn right || left || top || bottom\n\t\t\t? {\n\t\t\t\t\tright,\n\t\t\t\t\tleft,\n\t\t\t\t\ttop,\n\t\t\t\t\tbottom,\n\t\t\t  }\n\t\t\t: null\n\t}\n\n\tprotected stopMovement() {\n\t\tthis.setMovement(Direction.NONE)\n\t\tthis._instance?.setVelocity(0)\n\t}\n\n\tprotected setMovement(direction: Direction, onFinish: UnknownFn = (...args: unknown[]) => {}) {\n\t\tif (this.movement.direction === direction) return\n\n\t\tthis.movement.velocity = { x: 0, y: 0 }\n\t\tswitch (direction) {\n\t\t\tcase Direction.RIGHT:\n\t\t\t\tthis.movement.velocity.x = this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.LEFT:\n\t\t\t\tthis.movement.velocity.x = -this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP:\n\t\t\t\tthis.movement.velocity.y = -this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN:\n\t\t\t\tthis.movement.velocity.y = this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN_LEFT:\n\t\t\t\tthis.movement.velocity.x = -this.movement.speed\n\t\t\t\tthis.movement.velocity.y = this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN_RIGHT:\n\t\t\t\tthis.movement.velocity.x = this.movement.speed\n\t\t\t\tthis.movement.velocity.y = this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP_LEFT:\n\t\t\t\tthis.movement.velocity.x = -this.movement.speed\n\t\t\t\tthis.movement.velocity.y = -this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP_RIGHT:\n\t\t\t\tthis.movement.velocity.x = this.movement.speed\n\t\t\t\tthis.movement.velocity.y = -this.movement.speed\n\t\t\t\tbreak\n\n\t\t\tcase Direction.NONE:\n\t\t\t\tthis.movement.velocity.x = 0\n\t\t\t\tthis.movement.velocity.y = 0\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Wrong direction '${direction}'`)\n\t\t}\n\t\tthis.onFinish()\n\t\tthis.onFinish = onFinish\n\t\tthis.movement.direction = direction\n\t}\n}\n","import { Direction } from 'game/types'\n\nenum ESide {\n\tOPPOSITE = 'OPPOSITE',\n\tFOLLOWING = 'FOLLOWING',\n}\n\nconst directions = {\n\t[ESide.OPPOSITE]: {\n\t\t[Direction.UP]: [Direction.DOWN_LEFT, Direction.DOWN_RIGHT],\n\t\t[Direction.DOWN]: [Direction.UP_LEFT, Direction.UP, Direction.UP_RIGHT],\n\t\t[Direction.LEFT]: [Direction.DOWN_RIGHT, Direction.RIGHT, Direction.UP_RIGHT],\n\t\t[Direction.RIGHT]: [Direction.DOWN_LEFT, Direction.LEFT, Direction.DOWN_RIGHT],\n\t},\n\t[ESide.FOLLOWING]: {\n\t\t[Direction.UP]: [Direction.UP_LEFT, Direction.UP_RIGHT],\n\t\t[Direction.DOWN]: [Direction.DOWN_LEFT, Direction.DOWN_RIGHT],\n\t\t[Direction.LEFT]: [Direction.DOWN_LEFT, Direction.UP_LEFT],\n\t\t[Direction.RIGHT]: [Direction.DOWN_RIGHT, Direction.UP_RIGHT],\n\n\t\t[Direction.UP_LEFT]: [Direction.LEFT, Direction.UP],\n\t\t[Direction.UP_RIGHT]: [Direction.UP, Direction.RIGHT],\n\t\t[Direction.DOWN_LEFT]: [Direction.LEFT],\n\t\t[Direction.DOWN_RIGHT]: [Direction.RIGHT],\n\t},\n}\n\ntype TOpposite = Direction.UP | Direction.DOWN | Direction.LEFT | Direction.RIGHT\ntype TFollowing =\n\t| Direction.UP\n\t| Direction.LEFT\n\t| Direction.RIGHT\n\t| Direction.UP_LEFT\n\t| Direction.UP_RIGHT\n\t| Direction.DOWN_LEFT\n\t| Direction.DOWN_RIGHT\n\nconst getRandom = (arr: Direction[]) => arr[Phaser.Math.Between(0, arr.length - 1)]\n\nexport const getRandomDirection = {\n\topposite: (dir: TOpposite): Direction => {\n\t\tconst section = directions[ESide.OPPOSITE][dir]\n\t\treturn getRandom(section)\n\t},\n\tfollowing: (dir: Direction): Direction | null => {\n\t\tconst section = directions[ESide.FOLLOWING][dir as TFollowing]\n\t\treturn Array.isArray(section) ? getRandom(section) : null\n\t},\n}\n","import { SceneObject } from './SceneObject'\n\nexport abstract class StaticObject extends SceneObject {\n\tpreload() {}\n}\n","import Phaser from 'phaser'\nimport { BaseActor } from 'game/base-classes'\nimport { IAnimated } from 'game/interfaces'\nimport { Direction, DuckAnimation, UnknownFn } from 'game/types'\nimport { getRandomDirection } from 'game/util'\n\nexport class Duck extends BaseActor implements IAnimated {\n\tprotected width = 40\n\tprotected height = 37\n\tprivate animation = DuckAnimation.RIGHT\n\tprotected soundList = ['dead_duck_falls', 'duck_quack']\n\tprotected isKilled = false\n\tprivate counter = {\n\t\tafterBorderCollision: 0,\n\t\tbeforeSwitchingDirection: 0,\n\t\tquack: Phaser.Math.Between(25, 75),\n\t}\n\tprivate cb = {\n\t\tonKill: () => {},\n\t}\n\n\tconstructor(private scene: Phaser.Scene) {\n\t\tsuper()\n\n\t\tthis.movement.speed = 300\n\t\tthis.setSwitchTimer()\n\t}\n\n\tpreload() {\n\t\tthis.scene.load.spritesheet('duck', 'game-assets/duck.sprite120x148.png', {\n\t\t\tframeWidth: this.width,\n\t\t\tframeHeight: this.height,\n\t\t})\n\t\tthis.preloadSound(this.soundList, this.scene)\n\t}\n\n\tcreate() {\n\t\tconst { scene } = this\n\t\tthis._instance = scene.physics.add.sprite(BaseActor.scene.center.x - this.width * 2, BaseActor.scene.center.y, '')\n\t\tthis._instance.setScale(1.5).setCollideWorldBounds(true)\n\t\tthis.sounds = this.createSound(this.soundList, this.scene)\n\n\t\tconst animations = [\n\t\t\t{\n\t\t\t\tkey: DuckAnimation.RIGHT,\n\t\t\t\tframes: scene.anims.generateFrameNumbers('duck', { frames: [0, 1, 2] }),\n\t\t\t\tframeRate: 8,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: DuckAnimation.UP_RIGHT,\n\t\t\t\tframes: scene.anims.generateFrameNumbers('duck', { frames: [3, 4, 5] }),\n\t\t\t\tframeRate: 8,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: DuckAnimation.UP,\n\t\t\t\tframes: scene.anims.generateFrameNumbers('duck', { frames: [6, 7, 8] }),\n\t\t\t\tframeRate: 8,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: DuckAnimation.KILLED,\n\t\t\t\tframes: scene.anims.generateFrameNumbers('duck', { frames: [9, 10] }),\n\t\t\t\tframeRate: 4,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t]\n\t\tanimations.forEach((config) => scene.anims.create(config))\n\t\tthis.prepareMove(Direction.RIGHT)\n\t}\n\n\tupdate() {\n\t\tif (!this._instance) return\n\n\t\tif (!this.isKilled) {\n\t\t\tthis.shouldQuack()\n\t\t\tthis.shouldSwitchDirection()\n\t\t}\n\n\t\tthis.checkOnBounds()\n\t\tthis._instance.setVelocity(this.movement.velocity.x, this.movement.velocity.y).play(this.animation, true)\n\t}\n\n\tshouldQuack() {\n\t\tif (this.counter.quack--) return\n\n\t\tthis.counter.quack = Phaser.Math.Between(50, 150)\n\t\tthis.sounds.duck_quack.play()\n\t}\n\n\tshouldSwitchDirection() {\n\t\tif (this.counter.beforeSwitchingDirection--) return\n\n\t\tthis.setSwitchTimer()\n\t\tif (!this.movement.direction) return\n\n\t\tconst newDirection = getRandomDirection.following(this.movement.direction)\n\t\tif (newDirection) {\n\t\t\tthis.prepareMove(newDirection)\n\t\t}\n\t}\n\n\tkill() {\n\t\tif (this.isKilled) return\n\n\t\tthis.isKilled = true\n\t\tthis.sounds.dead_duck_falls.play()\n\t\tthis.prepareMove(Direction.DOWN)\n\t\tthis.cb.onKill()\n\t}\n\n\tonKill(cb: UnknownFn) {\n\t\tthis.cb.onKill = cb\n\t}\n\n\tprivate setSwitchTimer() {\n\t\tthis.counter.beforeSwitchingDirection = Phaser.Math.Between(10, 30)\n\t}\n\n\tsetAnimation(direction: Direction) {\n\t\tif (!this._instance) return\n\n\t\tswitch (direction) {\n\t\t\tcase Direction.RIGHT:\n\t\t\t\tthis.animation = DuckAnimation.RIGHT\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.LEFT:\n\t\t\t\tthis.animation = DuckAnimation.RIGHT\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(true, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP:\n\t\t\t\tthis.animation = DuckAnimation.UP\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN:\n\t\t\t\tthis.animation = DuckAnimation.KILLED\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP_RIGHT:\n\t\t\t\tthis.animation = DuckAnimation.UP_RIGHT\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.UP_LEFT:\n\t\t\t\tthis.animation = DuckAnimation.UP_RIGHT\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(true, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN_RIGHT:\n\t\t\t\tthis.animation = DuckAnimation.UP_RIGHT\n\t\t\t\tthis._instance.setAngle(90)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.DOWN_LEFT:\n\t\t\t\tthis.animation = DuckAnimation.UP_RIGHT\n\t\t\t\tthis._instance.setAngle(90)\n\t\t\t\tthis._instance.setFlip(false, true)\n\t\t\t\tbreak\n\n\t\t\tcase Direction.NONE:\n\t\t\t\tthis.animation = DuckAnimation.RIGHT\n\t\t\t\tthis._instance.setAngle(0)\n\t\t\t\tthis._instance.setFlip(false, false)\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Wrong direction '${direction}'`)\n\t\t}\n\t\tthis.movement.direction = direction\n\t}\n\n\tprivate checkOnBounds() {\n\t\tconst isOutOfBorder = this.isOutOfBorder()\n\t\tif (!isOutOfBorder) return\n\t\tif (this.counter.afterBorderCollision--) return\n\n\t\tlet dir: Direction\n\n\t\tif (isOutOfBorder?.right) dir = Direction.RIGHT\n\t\telse if (isOutOfBorder?.top) dir = Direction.UP\n\t\telse if (isOutOfBorder?.left) dir = Direction.LEFT\n\t\telse {\n\t\t\tdir = Direction.DOWN\n\n\t\t\tif (this.isKilled) this.isKilled = false\n\t\t}\n\n\t\tdir = getRandomDirection.opposite(dir)\n\t\tthis.prepareMove(dir)\n\t\tthis.counter.afterBorderCollision = 5\n\t}\n}\n","import Phaser from 'phaser'\nimport { BaseActor } from 'game/base-classes'\nimport { Ammo } from 'game/static'\nimport { Duck } from 'game/actors'\nimport { IOverlappable, IKeyboard } from 'game/interfaces'\nimport { Direction, CursorKeys, ZIndex } from 'game/types'\n\nexport class Hunter extends BaseActor implements IOverlappable {\n\tprotected width = 32\n\tprotected height = 32\n\tprivate cursors: CursorKeys\n\tprivate keyboard: IKeyboard = {}\n\n\tconstructor(private ammo: Ammo, private scene: Phaser.Scene) {\n\t\tsuper()\n\t\tthis.movement.speed = 400\n\t}\n\n\tpreload() {\n\t\tthis.scene.load.image('crosschair', 'game-assets/gun-pointer.png')\n\t}\n\n\tcreate() {\n\t\tconst { scene } = this\n\t\tthis._instance = scene.physics.add\n\t\t\t.sprite(BaseActor.scene.center.x, BaseActor.scene.center.y, 'crosschair')\n\t\t\t.setDepth(ZIndex.CROSSHAIR)\n\n\t\tthis.cursors = scene.input.keyboard.createCursorKeys()\n\t\tthis.keyboard.R = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.R)\n\t}\n\n\tupdate() {\n\t\tif (!this._instance || !this.cursors) return\n\n\t\tconst movement = this.movement\n\t\tconst isOutOfBorder = this.isOutOfBorder()\n\n\t\tif (this?.cursors?.space.isDown) this.ammo.tryToShoot()\n\t\tif (this.keyboard.R.isDown) this.ammo.reload()\n\n\t\tif (!isOutOfBorder?.left && this.cursors.left.isDown) this.setMovement(Direction.LEFT)\n\t\telse if (!isOutOfBorder?.right && this.cursors.right.isDown) this.setMovement(Direction.RIGHT)\n\t\telse if (!isOutOfBorder?.top && this.cursors.up.isDown) this.setMovement(Direction.UP)\n\t\telse if (!isOutOfBorder?.bottom && this.cursors.down.isDown) this.setMovement(Direction.DOWN)\n\t\telse if (movement.direction !== Direction.NONE) this.stopMovement()\n\n\t\tif (movement.direction === Direction.NONE) return\n\n\t\tthis._instance.setVelocity(movement.velocity.x, movement.velocity.y)\n\t}\n\n\tonOverlap = (duck: Duck): ArcadePhysicsCallback => () => {\n\t\tif (this?.cursors?.space.isDown && this.ammo.isShooting) {\n\t\t\tduck.kill()\n\t\t}\n\t}\n}\n","import Phaser from 'phaser'\nimport { StaticObject } from 'game/base-classes'\nimport { ZIndex } from 'game/types'\n\nexport class Background extends StaticObject {\n\tconstructor(private src: string, private scene: Phaser.Scene) {\n\t\tsuper()\n\t}\n\n\tpreload() {\n\t\tthis.scene.load.image('bg', this.src)\n\t}\n\n\tcreate() {\n\t\tthis.scene.add.image(StaticObject.scene.center.x, StaticObject.scene.center.y, 'bg').setDepth(ZIndex.BACKGROUND)\n\t}\n}\n","import Phaser from 'phaser'\nimport { StaticObject } from 'game/base-classes'\nimport { Text as TText, ZIndex } from 'game/types'\n\nexport class Text extends StaticObject {\n\tconstructor(private str: string, private x: number, private y: number, private scene: Phaser.Scene) {\n\t\tsuper()\n\t}\n\n\tprivate text: TText\n\n\tcreate() {\n\t\tthis.text = this.scene.add\n\t\t\t.text(this.x, this.y, this.str, { fontSize: '24px', color: '#fff' })\n\t\t\t.setDepth(ZIndex.LABELS)\n\t}\n\n\tsetText(str: string) {\n\t\tthis.text?.setText(str)\n\t}\n\n\tshow() {\n\t\tthis.text?.setVisible(true)\n\t}\n\n\thide() {\n\t\tthis.text?.setVisible(false)\n\t}\n}\n","import Phaser from 'phaser'\nimport { StaticObject } from 'game/base-classes'\nimport { Text } from './text'\n\nexport class Ammo extends StaticObject {\n\tprivate text: Text\n\tprivate caption = 'Ammo:'\n\tprivate magazine: number\n\tprivate _isShooting = false\n\tprotected soundList = ['gun_is_empty', 'shotgun', 'gun_reload']\n\n\tconstructor(private bullets: number, x: number, y: number, private scene: Phaser.Scene) {\n\t\tsuper()\n\t\tthis.magazine = bullets\n\t\tthis.text = new Text('', x, y, scene)\n\t}\n\n\tpreload() {\n\t\tthis.preloadSound(this.soundList, this.scene)\n\t}\n\n\tcreate() {\n\t\tthis.text.create()\n\t\tthis.updateText()\n\t\tthis.sounds = this.createSound(this.soundList, this.scene)\n\t}\n\n\tget isEmpty() {\n\t\treturn this.magazine === 0\n\t}\n\n\tget isFull() {\n\t\treturn this.magazine === this.bullets\n\t}\n\n\tget isShooting() {\n\t\treturn this._isShooting\n\t}\n\n\ttryToShoot = () => {\n\t\tif (this.isEmpty) {\n\t\t\tthis.sounds.gun_is_empty.play()\n\t\t\treturn false\n\t\t}\n\n\t\tif (this._isShooting) return false\n\n\t\tthis.sounds.shotgun.play()\n\t\tthis._isShooting = true\n\t\tthis.magazine--\n\t\tthis.updateText()\n\t\tsetTimeout(() => (this._isShooting = false), 2000)\n\n\t\treturn true\n\t}\n\n\treload() {\n\t\tif (this.isFull) return\n\n\t\tthis.sounds.gun_reload.play()\n\t\tthis.magazine = this.bullets\n\t\tthis.updateText()\n\t}\n\n\tprivate updateText() {\n\t\tthis.text.setText(`${this.caption}${this.magazine}`)\n\t}\n}\n","import Phaser from 'phaser'\nimport { StaticObject } from 'game/base-classes'\nimport { Text } from './text'\n\nexport class Score extends StaticObject {\n\tprivate text: Text\n\tprivate caption = 'Score:'\n\tprivate counter = 0\n\n\tconstructor(x: number, y: number, scene: Phaser.Scene) {\n\t\tsuper()\n\t\tthis.text = new Text('', x, y, scene)\n\t}\n\n\tpreload() {\n\t\tthis.text.preload()\n\t}\n\n\tincrease = (value = 1) => {\n\t\tthis.counter += value\n\t\tthis.updateText()\n\t}\n\n\tdecrease = (value = 1) => {\n\t\tthis.counter -= value\n\t\tthis.updateText()\n\t}\n\n\tcreate() {\n\t\tthis.text.create()\n\t\tthis.updateText()\n\t}\n\n\tvalueOf() {\n\t\treturn this.counter\n\t}\n\n\tprivate updateText() {\n\t\tthis.text.setText(`${this.caption}${this.counter}`)\n\t}\n}\n","import Phaser from 'phaser'\nimport { Duck, Hunter } from 'game/actors'\nimport { Background, Ammo, Score } from 'game/static'\nimport { SceneObject, StaticObject } from 'game/base-classes'\nimport { Sprite } from 'game/types'\n\nexport class Level extends Phaser.Scene {\n\tprivate isGameOver = false\n\tprivate bg: StaticObject\n\tprivate actors: SceneObject[]\n\tprivate duck: Duck\n\tprivate hunter: Hunter\n\tprivate ammo: Ammo\n\tprivate score: Score\n\n\tconstructor() {\n\t\tsuper('Level')\n\n\t\tconst y = 740\n\n\t\tthis.bg = new Background('game-assets/duck-hunt-background-large.png', this)\n\t\tthis.duck = new Duck(this)\n\t\tthis.ammo = new Ammo(2, 100, y, this)\n\t\tthis.score = new Score(660, y, this)\n\t\tthis.hunter = new Hunter(this.ammo, this)\n\n\t\tthis.actors = [this.duck, this.hunter, this.ammo, this.score]\n\t\tthis.duck.onKill(this.score.increase)\n\t}\n\n\tpreload() {\n\t\tthis.bg.preload()\n\t\tthis.actors.forEach((actor) => actor.preload())\n\t}\n\n\tcreate() {\n\t\tthis.bg.create()\n\t\tthis.actors.forEach((actor) => actor.create())\n\t\tthis.physics.add.overlap(\n\t\t\tthis.duck.instance as NonNullable<Sprite>,\n\t\t\tthis.hunter.instance as NonNullable<Sprite>,\n\t\t\tthis.hunter.onOverlap(this.duck),\n\t\t\tundefined,\n\t\t\tthis\n\t\t)\n\t}\n\n\tupdate() {\n\t\tif (this.isGameOver) return\n\n\t\tthis.isGameOver = this.actors.some((actor) => actor.update())\n\t}\n}\n","import Phaser from 'phaser'\nimport config from 'config.json'\n\ntype SpriteWithDynamicBody = Maybe<Phaser.Types.Physics.Arcade.SpriteWithDynamicBody>\ntype StaticGroup = Maybe<Phaser.Physics.Arcade.StaticGroup>\ntype Group = Maybe<Phaser.Physics.Arcade.Group>\ntype CursorKeys = Maybe<Phaser.Types.Input.Keyboard.CursorKeys>\n\ninterface ITutorial {\n\tcollectStar(object1: GameObjectWithBody, object2: GameObjectWithBody): void\n\thitBomb(object1: GameObjectWithBody, object2: GameObjectWithBody): void\n}\n\nexport class Tutorial extends Phaser.Scene implements ITutorial {\n\t#size = {\n\t\twidth: config.width,\n\t\theight: config.height,\n\t}\n\t#center = { x: 0, y: 0 }\n\n\t#bombs: Group\n\t#platforms: StaticGroup\n\t#player: SpriteWithDynamicBody\n\t#cursors: CursorKeys\n\t#stars: Group\n\t#starsCount = 10\n\t#score = 0\n\t#scoreText: Maybe<Phaser.GameObjects.Text>\n\t#gameOver = false\n\t#gameOverText: Maybe<Phaser.GameObjects.Text>\n\n\tconstructor() {\n\t\tsuper('Examples')\n\t\tthis.#center.x = this.#size.width / 2\n\t\tthis.#center.y = this.#size.height / 2\n\t}\n\n\tpreload() {\n\t\tthis.load.image('sky', 'tutorial-assets/sky.png')\n\t\tthis.load.image('ground', 'tutorial-assets/platform.png')\n\t\tthis.load.image('star', 'tutorial-assets/star.png')\n\t\tthis.load.image('bomb', 'tutorial-assets/bomb.png')\n\t\tthis.load.spritesheet('dude', 'tutorial-assets/dude.png', { frameWidth: 32, frameHeight: 48 })\n\t}\n\n\tcreate() {\n\t\tthis.add.image(400, 300, 'sky')\n\n\t\tthis.#platforms = this.createPlatforms()\n\t\tthis.#player = this.createPlayer()\n\t\tthis.createAnimations()\n\n\t\tthis.physics.add.collider(this.#player, this.#platforms)\n\t\tthis.#cursors = this.input.keyboard.createCursorKeys()\n\t\tthis.#stars = this.createStars()\n\t\tthis.#bombs = this.createBombs()\n\n\t\tthis.createPhysics()\n\n\t\tthis.#scoreText = this.add.text(16, 16, 'score: 0', { fontSize: '32px', color: '#000' })\n\t\tthis.#gameOverText = this.add.text(16, 16, 'Game over', { fontSize: '32px', color: '#000' })\n\t\tthis.#gameOverText.setVisible(false)\n\t}\n\n\tupdate() {\n\t\tif (this.#gameOver || !this.#cursors || !this.#player) return\n\n\t\tif (this.#cursors.left.isDown) {\n\t\t\tthis.#player.setVelocityX(-160)\n\t\t\tthis.#player.anims.play('left', true)\n\t\t} else if (this.#cursors.right.isDown) {\n\t\t\tthis.#player.setVelocityX(160)\n\t\t\tthis.#player.anims.play('right', true)\n\t\t} else {\n\t\t\tthis.#player.setVelocityX(0)\n\t\t\tthis.#player.anims.play('turn')\n\t\t}\n\n\t\tif (this.#cursors.up.isDown && this.#player.body.touching.down) {\n\t\t\tthis.#player.setVelocityY(-330)\n\t\t}\n\t}\n\n\tcreatePhysics() {\n\t\tif (!this.#stars || !this.#platforms || !this.#player || !this.#bombs) return\n\n\t\tthis.physics.add.collider(this.#stars, this.#platforms)\n\t\tthis.physics.add.collider(this.#player, this.#platforms)\n\t\tthis.physics.add.collider(this.#bombs, this.#platforms)\n\t\tthis.physics.add.overlap(this.#player, this.#stars, this.collectStar as ArcadePhysicsCallback, undefined, this)\n\t\tthis.physics.add.collider(this.#player, this.#bombs, this.hitBomb as ArcadePhysicsCallback, undefined, this)\n\t}\n\n\thitBomb(player: GameObjectWithBody, star: GameObjectWithBody) {\n\t\tif (this.#player) {\n\t\t\tthis.#player.setTint(0xff0000)\n\t\t\tthis.#player.anims.play('turn')\n\t\t}\n\n\t\tthis.gameOver()\n\t}\n\n\tgameOver() {\n\t\tthis.physics.pause()\n\t\tthis.#gameOver = true\n\n\t\tif (this.#gameOverText) {\n\t\t\tconst x = this.#size.width - this.#gameOverText.width - 16\n\t\t\tthis.#gameOverText.setVisible(true).setText('Game over').setPosition(x, 16)\n\t\t}\n\t}\n\n\tcreateBombs() {\n\t\tconst bomb = this.physics.add.group({\n\t\t\tkey: 'bomb',\n\t\t\trepeat: 2,\n\t\t\tsetXY: { x: 50, y: 0, stepX: 200 },\n\t\t})\n\n\t\treturn bomb\n\t}\n\n\tcreateStars() {\n\t\tconst stars = this.physics.add.group({\n\t\t\tkey: 'star',\n\t\t\trepeat: this.#starsCount,\n\t\t\tsetXY: { x: 12, y: 0, stepX: 70 },\n\t\t})\n\n\t\tstars.children.iterate((child) => {\n\t\t\tchild.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8))\n\t\t})\n\n\t\treturn stars\n\t}\n\n\tcollectStar(player: GameObjectWithBody, star: GameObjectWithBody) {\n\t\tif (star) star.disableBody(true, true)\n\n\t\tthis.#score += 10\n\t\tthis.#starsCount--\n\n\t\tif (this.#scoreText) {\n\t\t\tthis.#scoreText.setText('Score: ' + this.#score)\n\t\t}\n\n\t\tif (this.#starsCount === 0) this.gameOver()\n\t}\n\n\tcreatePlatforms() {\n\t\tconst platforms = this.physics.add.staticGroup()\n\t\tplatforms.create(400, 568, 'ground').setScale(2).refreshBody()\n\t\tplatforms.create(600, 400, 'ground')\n\t\tplatforms.create(50, 250, 'ground')\n\t\tplatforms.create(750, 220, 'ground')\n\n\t\treturn platforms\n\t}\n\n\tcreatePlayer() {\n\t\tconst player = this.physics.add.sprite(this.#center.x, this.#center.y, 'dude')\n\t\tplayer.setBounce(0.4)\n\t\tplayer.setCollideWorldBounds(true)\n\n\t\treturn player\n\t}\n\n\tcreateAnimations() {\n\t\tconst animations = [\n\t\t\t{\n\t\t\t\tkey: 'left',\n\t\t\t\tframes: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\n\t\t\t\tframeRate: 10,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'turn',\n\t\t\t\tframes: [{ key: 'dude', frame: 4 }],\n\t\t\t\tframeRate: 20,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'right',\n\t\t\t\tframes: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\n\t\t\t\tframeRate: 10,\n\t\t\t\trepeat: -1,\n\t\t\t},\n\t\t]\n\n\t\tanimations.forEach((anime) => this.anims.create(anime))\n\t}\n}\n","import { IonPhaser, GameInstance } from '@ion-phaser/react'\nimport styled from 'styled-components'\nimport { Level } from 'game/scenes'\nimport { useConfig } from 'hooks'\n\nconst Section = styled.section`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n\n\t& > .ion-phaser {\n\t\tborder: 1px solid black;\n\t}\n`\n\nexport const Game = () => {\n\tconst [config] = useConfig({ scene: Level })\n\treturn (\n\t\t<Section>\n\t\t\t<IonPhaser game={config as GameInstance} className=\"ion-phaser\" />\n\t\t</Section>\n\t)\n}\n","import { useState, useCallback } from 'react'\nimport merge from 'deepmerge'\nimport Phaser from 'phaser'\nimport { GameInstance } from '@ion-phaser/react'\nimport phaserConfig from 'config.json'\n\nexport const useConfig = (diff: Partial<GameInstance> = {}) => {\n\tconst [config, setConfig] = useState<GameInstance>(\n\t\tmerge(\n\t\t\t{\n\t\t\t\ttype: Phaser.AUTO,\n\t\t\t\t...phaserConfig,\n\t\t\t},\n\t\t\tdiff\n\t\t)\n\t)\n\n\tconst update = useCallback((diff: Partial<GameInstance>) => {\n\t\tsetConfig((prev): GameInstance => merge(prev, diff))\n\t}, [])\n\n\treturn [config, update] as [GameInstance, (diff: Partial<GameInstance>) => void]\n}\n","export default __webpack_public_path__ + \"static/media/duckhunt.85e41777.png\";","import styles from './home.module.sass'\nimport styled from 'styled-components'\nimport duckhunt from 'assets/duckhunt.png'\n\nconst Img = styled.img`\n\twidth: 100vh;\n`\n\nconst H1 = styled.h1`\n\ttext-align: center;\n`\n\nexport const Home = () => (\n\t<div className={styles.home}>\n\t\t<Img src={duckhunt} alt=\"duckhunt\" />\n\t\t<H1>Duck Hunt 2D</H1>\n\t</div>\n)\n","import { ReportHandler } from 'web-vitals'\n\ninterface ReportWebVitals {\n\t(onPerfEntry?: ReportHandler): void\n}\n\nconst reportWebVitals: ReportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { getConfiguredStore } from 'reducers'\nimport { App } from 'components/layout'\nimport './style.sass'\nimport reportWebVitals from './reportWebVitals'\n\nrender(\n\t<React.StrictMode>\n\t\t<Provider store={getConfiguredStore()}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { configureStore } from '@reduxjs/toolkit'\nimport { rootReducer } from './rootReducer'\n\nexport const getConfiguredStore = () => {\n\tconst store = configureStore({\n\t\treducer: rootReducer,\n\t})\n\n\tif (process.env.NODE_ENV !== 'production' && module.hot) {\n\t\tmodule.hot.accept('./', () => store.replaceReducer(rootReducer))\n\t}\n\n\treturn store\n}\n\nexport type { RootState } from './rootReducer'\n"],"sourceRoot":""}